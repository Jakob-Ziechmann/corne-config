/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&mt { tapping-term-ms = <300>; };

/ {
    combos {
        compatible = "zmk,combos";

        hardware_layer {
            bindings = <&to 3>;
            key-positions = <24 35>;
        };

        repeat_key {
            bindings = <&key_repeat>;
            key-positions = <41>;
            layers = <0>;
        };
    };

    macros {
        harpoon: harpoon {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&kp ESCAPE &sk LEFT_CONTROL &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "harpoon";
        };

        single_shot: single_shot {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "SINGLE_SHOT";
        };

        to0: to0 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&to 0>;
            label = "TO0";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            display-name = "Base";
            bindings = <
&kp TAB    &kp Q  &kp W  &kp F     &kp P  &kp B      &kp J      &kp L  &kp U      &kp Y    &kp SEMICOLON  &kp BACKSPACE
&kp LCTRL  &kp A  &kp R  &kp S     &kp T  &kp G      &kp M      &kp N  &kp E      &kp I    &kp O          &kp SQT
&kp LSHFT  &kp Z  &kp X  &kp C     &kp D  &kp V      &kp K      &kp H  &kp COMMA  &kp DOT  &kp FSLH       &kp ESCAPE
                         &kp LGUI  &mo 1  &kp RET    &kp SPACE  &sl 2  &kp RALT
            >;
        };

        control_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            display-name = "control";
            bindings = <
&kp TAB           &kp N1      &kp N2      &kp N3      &kp N4      &kp N5        &kp N6     &kp N7    &kp N8        &kp N9    &kp N0           &kp BSPC
&kp LEFT_CONTROL  &harpoon S  &harpoon N  &harpoon T  &harpoon H  &harpoon E    &none      &kp LEFT  &kp UP_ARROW  &kp DOWN  &kp RIGHT_ARROW  &kp DELETE
&kp LSHFT         &none       &none       &none       &none       &none         &none      &kp H     &kp K         &kp J     &kp L            &none
                                          &kp LGUI    &trans      &kp ENTER     &kp SPACE  &mo 2     &kp RALT
            >;
        };

        special_chars {
            bindings = <
&kp TAB  &kp EXCLAMATION  &kp AT_SIGN   &kp HASH       &kp LEFT_BRACE        &kp PERCENT    &kp AMPERSAND  &kp RIGHT_BRACE        &kp CARET         &kp EQUAL  &none          &kp BACKSPACE
&none    &kp PIPE         &kp ASTERISK  &kp PLUS       &kp LEFT_PARENTHESIS  &kp DOLLAR     &kp DOLLAR     &kp RIGHT_PARENTHESIS  &kp MINUS         &kp SLASH  &kp BACKSLASH  &kp GRAVE
&none    &none            &none         &kp LESS_THAN  &kp LEFT_BRACKET      &kp TILDE      &kp UNDER      &kp RIGHT_BRACKET      &kp GREATER_THAN  &none      &none          &to0
                                        &kp LEFT_GUI   &trans                &kp RETURN     &kp SPACE      &trans                 &none
            >;
        };

        hardware_layer {
            bindings = <
&trans  &none         &trans        &trans        &trans        &trans    &trans  &trans  &trans  &trans  &trans  &bt BT_CLR
&trans  &bt BT_SEL 3  &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans        &trans        &trans        &trans        &trans    &trans  &trans  &trans  &trans  &trans  &to0
                                    &trans        &trans        &trans    &trans  &trans  &trans
            >;
        };
    };
};
