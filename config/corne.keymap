/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&mt { tapping-term-ms = <300>; };

/ {
    combos {
        compatible = "zmk,combos";

        hardware_layer {
            bindings = <&to 3>;
            key-positions = <24 35>;
        };

        ing_combo {
            bindings = <&m_ing>;
            key-positions = <21 19 17>;
            layers = <4>;
            timeout-ms = <200>;
        };

        tion_combo {
            bindings = <&m_tion>;
            key-positions = <16 21 22 19>;
            timeout-ms = <200>;
            layers = <4>;
        };

        con_combo {
            bindings = <&m_con>;
            key-positions = <26 22 20>;
            timeout-ms = <200>;
            layers = <4>;
        };

        ter_combo {
            bindings = <&m_ter>;
            key-positions = <16 20 13>;
        };

        com_combo {
            bindings = <&m_com>;
            key-positions = <27 22 18>;
            layers = <4>;
            timeout-ms = <200>;
        };

        per_combo {
            bindings = <&m_per>;
            key-positions = <4 20 13>;
            timeout-ms = <200>;
            layers = <4>;
        };

        pro_combo {
            bindings = <&m_pro>;
            key-positions = <4 13 22>;
            timeout-ms = <200>;
            layers = <4>;
        };

        ment_combo {
            bindings = <&m_ment>;
            key-positions = <20 19 16 18>;
            timeout-ms = <200>;
            layers = <4>;
        };

        tions_combo {
            bindings = <&m_tions>;
            key-positions = <16 21 22 19 14>;
        };

        ble_combo {
            bindings = <&m_ble>;
            key-positions = <5 7 20>;
            layers = <4>;
            timeout-ms = <200>;
        };

        der_combo {
            bindings = <&m_der>;
            key-positions = <28 20 13>;
        };

        dis_combo {
            bindings = <&m_dis>;
            key-positions = <28 21 14>;
            layers = <4>;
            timeout-ms = <200>;
        };

        cal_combo {
            bindings = <&m_cal>;
            key-positions = <28 13 7>;
            timeout-ms = <200>;
            layers = <4>;
        };

        man_combo {
            bindings = <&m_man>;
            key-positions = <18 12 19>;
            timeout-ms = <200>;
            layers = <4>;
        };

        sion_combo {
            bindings = <&m_sion>;
            key-positions = <21 22 19 14>;
            timeout-ms = <200>;
            layers = <4>;
        };

        est_combo {
            bindings = <&m_est>;
            key-positions = <20 14 16>;
        };
    };

    macros {
        harpoon: harpoon {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&kp ESCAPE &sk LEFT_CONTROL &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "harpoon";
        };

        single_shot: single_shot {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "SINGLE_SHOT";
        };

        to0: to0 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&to 0>;
            label = "TO0";
        };

        m_ing: m_ing {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp I &kp N &kp G>;
            label = "M_ING";
        };

        m_tion: m_er {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp T &kp I &kp O &kp N>;
            label = "M_ER";
        };

        m_con: m_con {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp C &kp O &kp N>;
            label = "M_CON";
        };

        m_ter: m_ter {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp T &kp E &kp R>;
            label = "M_TER";
        };

        m_com: m_com {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp C &kp O &kp M>;
            label = "M_COM";
        };

        m_per: per {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp P &kp E &kp R>;
            label = "PER";
        };

        m_pro: m_pro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp P &kp R &kp O>;
            label = "M_PRO";
        };

        m_ment: m_ment {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp M &kp E &kp N &kp T>;
            label = "M_MENT";
        };

        m_tions: m_tions {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp T &kp I &kp O &kp N &kp S>;
            label = "M_TIONS";
        };

        m_ble: m_ble {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp B &kp L &kp E>;
            label = "M_BLE";
        };

        m_der: m_der {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp D &kp E &kp R>;
            label = "M_DER";
        };

        m_dis: m_dis {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp D &kp I &kp S>;
            label = "M_DIS";
        };

        m_cal: m_cal {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp C &kp A &kp L>;
            label = "M_CAL";
        };

        m_man: m_man {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp M &kp A &kp N>;
            label = "M_MAN";
        };

        m_sion: m_sion {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp S &kp I &kp O &kp N>;
            label = "M_SION";
        };

        m_est: m_est {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp E &kp S &kp T>;
            label = "M_EST";
        };

        m_lar: m_lar {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp L &kp A &kp R>;
            label = "M_LAR";
        };

        m_ture: m_ture {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp T &kp U &kp R &kp E>;
            label = "M_TURE";
        };

        m_for: m_for {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp F &kp O &kp R>;
            label = "M_FOR";
        };

        m_mer: m_mer {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp M &kp E &kp R>;
            label = "M_MER";
        };

        m_col: m_col {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp C &kp O &kp L>;
            label = "M_COL";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            display-name = "Base";
            bindings = <
&kp TAB    &kp Q  &kp W  &kp F     &kp P  &kp B      &kp J      &kp L  &kp U      &kp Y    &kp SEMICOLON  &kp BACKSPACE
&kp LCTRL  &kp A  &kp R  &kp S     &kp T  &kp G      &kp M      &kp N  &kp E      &kp I    &kp O          &kp SQT
&kp LSHFT  &kp Z  &kp X  &kp C     &kp D  &kp V      &kp K      &kp H  &kp COMMA  &kp DOT  &kp FSLH       &kp ESCAPE
                         &kp LGUI  &mo 1  &kp RET    &kp SPACE  &sl 2  &mo 4
            >;
        };

        control_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            display-name = "control";
            bindings = <
&kp LA(TAB)       &kp N1      &kp N2      &kp N3      &kp N4      &kp N5        &kp N6     &kp N7    &kp N8        &kp N9    &kp N0           &kp BSPC
&kp LEFT_CONTROL  &harpoon S  &harpoon N  &harpoon T  &harpoon H  &harpoon E    &none      &kp LEFT  &kp UP_ARROW  &kp DOWN  &kp RIGHT_ARROW  &kp DELETE
&kp LSHFT         &none       &none       &none       &none       &none         &none      &kp H     &kp K         &kp J     &kp L            &none
                                          &kp LGUI    &trans      &kp ENTER     &kp SPACE  &mo 2     &kp RALT
            >;
        };

        special_chars {
            bindings = <
&kp TAB  &kp EXCLAMATION  &kp AT_SIGN   &kp HASH       &kp LEFT_BRACE        &kp PERCENT    &kp AMPERSAND  &kp RIGHT_BRACE        &kp CARET         &kp EQUAL  &none          &kp BACKSPACE
&none    &kp PIPE         &kp ASTERISK  &kp PLUS       &kp LEFT_PARENTHESIS  &kp DOLLAR     &kp DOLLAR     &kp RIGHT_PARENTHESIS  &kp MINUS         &kp SLASH  &kp BACKSLASH  &kp GRAVE
&none    &none            &none         &kp LESS_THAN  &kp LEFT_BRACKET      &kp TILDE      &kp UNDER      &kp RIGHT_BRACKET      &kp GREATER_THAN  &none      &none          &to0
                                        &kp LEFT_GUI   &trans                &kp RETURN     &kp SPACE      &trans                 &none
            >;
        };

        hardware_layer {
            bindings = <
&trans  &none         &trans        &trans        &trans        &trans    &trans  &trans  &trans  &trans  &trans  &bt BT_CLR
&trans  &bt BT_SEL 3  &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans        &trans        &trans        &trans        &trans    &trans  &trans  &trans  &trans  &trans  &to0
                                    &trans        &trans        &trans    &trans  &trans  &trans
            >;
        };

        chording {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };
    };
};
